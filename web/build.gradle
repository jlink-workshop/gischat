plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
}

group = 'org.heigit.gischat'
//version = '0.0.1-SNAPSHOT' // with no version the jar's name is "web.jar"

repositories {
	mavenCentral()
}

dependencies {
    implementation(project(':frontend'))
    implementation(project(':domain'))
	implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springdoc:springdoc-openapi-ui:$springdocVersion"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.mockito:mockito-core:$mockitoVersion"
	testImplementation "org.assertj:assertj-core:$assertJVersion"

    testImplementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testImplementation "io.github.bonigarcia:webdrivermanager:${webDriverManagerVersion}"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.compilerArgs += '-parameters'
}

test {
    useJUnitPlatform()
    reports {
        junitXml.required = true
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.register('processFrontendResources', Copy) {
    group 'Frontend'
    description 'Process frontend resources'
    dependsOn project(':frontend').tasks.named('build')

    def frontendResourcesFrom = file("${project(':frontend').buildDir}/resources")
    def frontendResourcesTo = file("${project.buildDir}/resources/main/public")

    from frontendResourcesFrom
    into frontendResourcesTo
}

tasks.named('processResources') {
    dependsOn tasks.named('processFrontendResources')
}